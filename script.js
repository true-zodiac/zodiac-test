'use strict'

const Pairings = {
    OurCase: 'OurCase',
    BadCase: 'BadCase',
    NeutralCase: 'NeutralCase',
    Narcisoss: 'Narcisoss'
};


const signOptions = [
    { value: 'aries',       text: '–û–≤–µ–Ω' },
    { value: 'taurus',      text: '–¢–µ–ª–µ—Ü—å' },
    { value: 'gemini',      text: '–ë–ª–∏–∑–Ω—é–∫–∏' },
    { value: 'cancer',      text: '–†–∞–∫' },
    { value: 'leo',         text: '–õ–µ–≤' },
    { value: 'virgo',       text: '–î—ñ–≤–∞' },
    { value: 'libra',       text: '–¢–µ—Ä–µ–∑–∏' },
    { value: 'scorpio',     text: '–°–∫–æ—Ä–ø—ñ–æ–Ω' },
    { value: 'sagittarius', text: '–°—Ç—Ä—ñ–ª–µ—Ü—å' },
    { value: 'capricorn',   text: '–ö–æ–∑–æ—Ä—ñ–≥' },
    { value: 'aquarius',    text: '–í–æ–¥–æ–ª—ñ–π' },
    { value: 'pisces',      text: '–†–∏–±–∏' },
];

const goodAnswers = [
    '–ë–æ–æ–æ–æ–∂–µ, —Å—É–º—ñ—Å–Ω—ñ—Å—Ç—å 127%, –≤–æ–Ω–∏ –∂–∏—Ç–∏–º—É—Ç—å —É –º–∏—Ä—ñ —ñ –∑–ª–∞–≥–æ–¥—ñ, —Ç–∞–∫–æ–≥–æ –≤–∑–∞—î–º–æ—Ä–æ–∑—É–º—ñ–Ω–Ω—è —â–µ –Ω—ñ—Ö—Ç–æ –Ω–µ –º–∞–≤, –∫—Ä–∞—â–æ—ó –ø–∞—Ä–∏ –Ω—É –ø—Ä–æ–æ–æ–æ–æ—Å—Ç–æ –Ω–µ –∑–Ω–∞–π–¥–µ—à! –ü—Ä–µ–∫—Ä–∞—Å–Ω–∞ –ø–∞—Ä–∞, —è–Ω–≥–æ–ª–∏ —â–æ—Ä–∞–∑—É –ø–ª–∞—á—É—Ç—å, –∫–æ–ª–∏ –±–∞—á–∞—Ç—å —ó—Ö —Ä–∞–∑–æ–º, –∞ –ê—Ñ—Ä–æ–¥—ñ—Ç–∞ –æ—Å–æ–±–∏—Å—Ç–æ —ó—Ö –±–ª–∞–≥–æ—Å–ª–æ–≤–∏–ª–∞ –Ω–∞ –≤—ñ—á–Ω–µ –∫–æ—Ö–∞–Ω–Ω—è',
];


const badAnswers = [
    '–§—É, –Ω—É –±—Ä—î–¥ —è–∫–∏–π—Å—å',
    'ü§Æü§Æü§Æü§Æ',
    '–ù–∞—Ñ—ñ–≥–∞, —è–∫—â–æ —î –†–∞–∫-–†–∏–±–∏? üòê',
    '–ù–µ –¥–æ–≤–µ–¥–∏ –ì–æ—Å–ø–æ–¥—å',
    '–ù–∞–π–∂–∞—Ö–ª–∏–≤—ñ—à–∞ –ø–∞—Ä–∞ –í—Å–µ—Å–≤—ñ—Ç—É',
    '–ù–∞—Å—Ç—ñ–ª—å–∫–∏ –ª–æ—Ö–æ–≤—Å—å–∫–∞ –ø–∞—Ä–∞, —â–æ –Ω–∞ –∫–æ–Ω–∫—É—Ä—Å—ñ –ª–æ—Ö—ñ–≤ –∑–∞–π–º–µ –¥—Ä—É–≥–µ –º—ñ—Å—Ü–µ, –±–æ –≤–æ–Ω–∏ –ª–æ—Ö–∏',
    '–ü–æ—Å—Ç—ñ–π–Ω—ñ —Å—É–ø–µ—Ä–µ—á–∫–∏, –≤–æ–Ω–æ —Ç–æ–±—ñ —Ç—Ä–µ–±–∞?',
    '–Ø –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–º–æ–≤—á—É, –±–æ —Ü–µ –Ω—ñ –≤ —è–∫—ñ –≤–æ—Ä–æ—Ç–∞ üòê',
];

const neutralAnswers = [
    '–¢–∞ –∫–æ–º—É —Ç–æ –Ω–∞—Ñ—ñ–≥ —Ü—ñ–∫–∞–≤–æ ü•± –ö—Ä–∞—â–µ —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –†–∞–∫-–†–∏–±–∏',
];


window.onload = () => {
    const signOneField = document.getElementById('sign1');
    const signTwoField = document.getElementById('sign2');

    addOptions(signOneField, signOptions);
    addOptions(signTwoField, signOptions);

    const resultButton = document.getElementById('result-button');

    resultButton.onclick = () => {
        const signOne = signOneField.value;
        const signTwo = signTwoField.value;
    

        const pairing = getPairing(signOne, signTwo);

        let answer = 'error';

        switch(pairing) {
            case Pairings.OurCase:
                answer = getRandomElement(goodAnswers);
                break;
            case Pairings.BadCase:
                answer = getRandomElement(badAnswers);
                break;
            case Pairings.Narcisoss:
                answer = '–¢–∏ —â–æ, –Ω–∞—Ä—Ü–∏—Å? üòåüíÖ';
                break;
            case Pairings.NeutralCase:
                answer = getRandomElement(neutralAnswers);
                break;
        }

        const resultsSection = document.getElementById('results');

        resultsSection.innerHTML = '<p>' + answer + '</p>';

        resultsSection.scrollIntoView({ behavior: 'smooth' });
    }
}

function getPairing(signOne, signTwo) {
    if (signOne == 'cancer' && signTwo == 'cancer') {
        return Pairings.Narcisoss;
    }

    if (signOne == 'cancer' && signTwo == 'pisces') {
        return Pairings.OurCase;
    }

    if (signOne == 'pisces' && signTwo == 'cancer') {
        return Pairings.OurCase;
    }

    if (signOne == 'pisces' && signTwo != 'cancer') {
        return Pairings.BadCase;
    }


    if (signOne != 'cancer' && signTwo == 'pisces') {
        return Pairings.BadCase;
    }

    
    if (signOne == 'cancer' && signTwo != 'pisces') {
        return Pairings.BadCase;
    }

    
    if (signOne != 'pisces' && signTwo == 'cancer') {
        return Pairings.BadCase;
    }

    return Pairings.NeutralCase;
}


function getRandomElement(arr) {
    const randomIndex = Math.floor(Math.random() * arr.length);
    return arr[randomIndex];
}

function addOptions(select, options) {
    options.forEach(optionData => {
        const option = document.createElement('option');

        option.value = optionData.value;
        option.textContent = optionData.text;

        select.appendChild(option);
    });
}
